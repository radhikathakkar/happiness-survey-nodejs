const Survey = require('../models/survey');
const User = require('../models/users');
var jwt = require('jsonwebtoken');
const chalk = require('chalk');
const log = console.log;
const conn = require('../connection');
var sql = require("mssql");
var _ = require('lodash');

var dbConfig = {
    user: "rspl_hr",
    password: "rspl123#",
    server: "RSDS004\\SS2008",
    database: "RSPLPortal_QA_new"
};
module.exports = {
    
    newSurveyUser: async (req, res, next) => {
        const { userId } = req.params;
        //new User
        const newUser = new User(req.body);
        // console.log('newCar', newUser)
        // get Survey
        const survey = await Survey.findById(userId);
        //assign user as survey's user
        newUser.survey = survey;
        //save the user
        console.log(newUser)
        // await newUser.save();
        // //Add User to survey's assignees array 
        survey.assignees.push(newUser);
        //save user
        // survey.save();
        res.status(201).json(newUser);
    },

    newSurveyUserRes: async (req, res, next) => {
        const { surveyId } = req.params;
        const { userId } = req.params;
        newRes = req.body;
        const survey = await Survey.findById(surveyId);

        survey.assignees.id(userId).response = req.body.response;
        survey.save();
        console.log(survey);
        // await survey.save();

    },

    findUsersSurvey: async (req, res, next) => {
        var id = req.body.id;
        // connect to your database
        const { userId } = req.params;
        Survey.find({ 'assignees._id': userId }, async function (err, result) {
            if (err) console.log(err)
            else {
                res.send(result)
            }
        })
    },
    findUsersfilledSurvey: async (req, res, next) => {
        var id = req.body.id;
        // connect to your database
        const { userId } = req.params;
        Survey.find({ 'assignees._id': userId,'endDate' : { $gte :new Date()}}, async function (err, result) {
            if (err) console.log(err)
            else {
                let assignees = result.map(x => x.assignees.find(x =>x._id ==userId));
                let newSurvey = [];
                // console.log(assignees.map(x=> x.response))
                for (var i = 0; i <= result.length -1; i++) {
                //     console.log(i)
                    if (assignees[i].response.length === 0 ){
                    
                        newSurvey.push(result[i]);
                            console.log(newSurvey);
                        } else {
                            console.log("Object not found.");
                        }
                }
                res.send(newSurvey)
            }
        })
    },
    getUsersSurvey: async (req, res, next) => {
        var id = req.body.id;
        // connect to your database
        // const { userId } = req.params;
        Survey.find({ 'ownerID': { $regex: `^${id}` } }, async function (err, result) {
            if (err) console.log(err)
            else
                res.send(result);
            // for(var i ; i<=)
        })
    },
    findUser: async (req, res, next) => {
        var id = req.body.id;
        const { surveyId } = req.params;
        // connect to your database
        //query to the database and get the records
        new sql.Request(conn)
            .query(`SELECT [FirstName],[LastName],[RishabhId]
                 FROM [RSPLPortal_QA_new].[dbo].[vwEmployeeDetailsWithAARA] where RishabhId like  '${id}%'`
                , async function (err, recordset) {
                    if (err) console.log(err)
                    // sql.close();
                    // res.send(recordset)
                    let RishabhId = recordset.recordset[0].RishabhId;

                    let payload = { subject: RishabhId }
                    var token = jwt.sign(payload, 'secretKey')

                    User.find({ RishabhId: RishabhId }, async function (err, result) {
                        if (result.length == 0) {
                            console.log('null')
                            newUser = recordset.recordset[0];
                            console.log(newUser)
                            updateUser = new User(newUser);
                            console.log(updateUser)
                            updateUser.save()

                            console.log(token)
                            updateUser.token = token
                            const survey = await Survey.findById(surveyId).populate('assignees')
                            // survey.assignees.push(updateUser);
                            // await survey.save();
                            res.send(survey)
                        }
                        else {

                            res.send(result);
                        }
                    })
                })
    },
    getUsersSurveyRes: async (req, res) => {
        const { surveyId } = req.params;
        const { userId } = req.params;

        const survey = await Survey.findById(surveyId);

        res.json(survey.assignees.id(userId));
    }
};